name: 🧪 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Cancel previous runs when a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '18.x'

jobs:
  # 🔍 Code Quality & Security Checks
  lint-and-security:
    name: 🔍 Lint & Security
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 🔍 TypeScript type check
        run: npm run type-check

      - name: 🔒 Security audit
        run: npm audit --audit-level moderate

      - name: 📊 Bundle analysis (comment on PR)
        if: github.event_name == 'pull_request'
        run: npm run analyze

  # 🧪 Testing Suite
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x']
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test -- --coverage --watchAll=false

      - name: 📊 Upload coverage to Codecov
        if: matrix.node-version == '18.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: 📊 Coverage comment (PR only)
        if: github.event_name == 'pull_request' && matrix.node-version == '18.x'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info

  # 🏗️ Build Verification
  build:
    name: 🏗️ Build Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build
        env:
          NEXT_PUBLIC_APP_URL: https://cfipros.com
          API_BASE_URL: https://api.cfipros.com/v1

      - name: 🏗️ Build storybook (if exists)
        run: |
          if [ -f ".storybook/main.js" ] || [ -f ".storybook/main.ts" ]; then
            npm run build-storybook
          else
            echo "No Storybook configuration found, skipping..."
          fi

      - name: 📦 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            out/
            dist/
          retention-days: 7

  # ♿ Accessibility Testing
  accessibility:
    name: ♿ Accessibility Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build for testing
        run: npm run build
        env:
          NEXT_PUBLIC_APP_URL: http://localhost:3000
          API_BASE_URL: http://localhost:8000/v1

      - name: 🚀 Start application
        run: npm run start &
        env:
          PORT: 3000

      - name: ⏳ Wait for app to start
        run: |
          timeout 60s bash -c 'until curl -f http://localhost:3000; do sleep 1; done'

      - name: ♿ Run accessibility tests
        run: |
          npx @axe-core/cli http://localhost:3000 \
            --exit \
            --stdout \
            --tags wcag2a,wcag2aa \
            --disable color-contrast # Temporarily disabled until design system is finalized

  # 🔒 Security Testing
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔒 Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=medium
        continue-on-error: true

      - name: 🔍 CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: 🏗️ Autobuild for CodeQL
        uses: github/codeql-action/autobuild@v2

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # 📱 Cross-Browser Testing (Playwright)
  e2e:
    name: 📱 E2E Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright
        run: npx playwright install --with-deps

      - name: 🏗️ Build application
        run: npm run build
        env:
          NEXT_PUBLIC_APP_URL: http://localhost:3000
          API_BASE_URL: http://localhost:8000/v1

      - name: 🧪 Run Playwright tests
        run: |
          if [ -d "e2e" ] || [ -d "tests/e2e" ]; then
            npm run test:e2e
          else
            echo "No E2E tests found, skipping..."
          fi

      - name: 📊 Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  # ✅ All Checks Passed
  all-checks:
    name: ✅ All Checks
    runs-on: ubuntu-latest
    needs: [lint-and-security, test, build]
    if: always()
    steps:
      - name: ✅ All required checks passed
        run: |
          if [[ "${{ needs.lint-and-security.result }}" == "success" && \
                "${{ needs.test.result }}" == "success" && \
                "${{ needs.build.result }}" == "success" ]]; then
            echo "✅ All required checks passed!"
            exit 0
          else
            echo "❌ Some required checks failed"
            exit 1
          fi

  # 🚀 Deploy Preview (PR only)
  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: [lint-and-security, test, build]
    if: github.event_name == 'pull_request' && needs.build.result == 'success'
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-files

      - name: 🚀 Deploy to Vercel Preview
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./

      - name: 💬 Comment deployment URL
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview deployment ready!**
              
              ✅ **URL:** ${{ steps.deploy.outputs.url }}
              📋 **Commit:** ${{ github.sha }}
              
              The preview will be automatically updated when you push new commits to this PR.`
            })

  # 📊 Performance Audit
  lighthouse:
    name: 📊 Lighthouse Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [deploy-preview]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📊 Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            ${{ needs.deploy-preview.outputs.url }}
            ${{ needs.deploy-preview.outputs.url }}/upload
          temporaryPublicStorage: true
          uploadArtifacts: true